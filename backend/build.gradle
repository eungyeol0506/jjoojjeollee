plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.jooq.jooq-codegen-gradle" version "3.19.23"
}

group = 'app.project'
version = '0.0.2-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    // mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// logging
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.10.0'
	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	// JOOQ
	implementation 'org.jooq:jooq:3.19.23'
	jooqCodegen 'org.jooq:jooq-codegen:3.19.23'
	jooqCodegen 'org.jooq:jooq-meta:3.19.23'
	jooqCodegen 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jooq {
	configuration{
		jdbc {
			driver   = 'com.mysql.cj.jdbc.Driver'
			url      = 'jdbc:mysql://localhost:3306/jjoojjeollee'
			user     = 'root'
			password = 'root'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'

			database {
				name = 'org.jooq.meta.mysql.MySQLDatabase'
//				inputSchema = 'jjoojjeollee'
			}

			generate {}
			target {
				packageName = 'target'
				directory = 'src/main/generated'
			}
		}

	}
}

tasks.named("compileJava") {
	dependsOn(tasks.named("jooqCodegen"))
}

sourceSets {
	main {
		java {
			srcDir 'src/main/generated'
		}
	}
}